<Page
	x:Class="Modelbouwer.View.ProductManagement"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Engine="clr-namespace:Syncfusion.UI.Xaml.TreeView.Engine;assembly=Syncfusion.SfTreeView.WPF"
	xmlns:converter="clr-namespace:Modelbouwer.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:Modelbouwer.View"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
	xmlns:viewmodels="clr-namespace:Modelbouwer.ViewModels"
	Title="ProductManagement"
	d:DataContext="{d:DesignInstance Type=viewmodels:CombinedProductViewModel}"
	d:DesignHeight="1000"
	d:DesignWidth="1600"
	mc:Ignorable="d"
	>

	<Page.Resources>
		<converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<converter:BooleanToStringConverter x:Key="BooleanToStringConverter" />
		<converter:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
		<converter:IntToBoolConverter x:Key="IntToBoolConverter" />
		<converter:IndentToPaddingConverter x:Key="IndentToBoolConverter" />
		<converter:ByteToImageConverter x:Key="ByteToImageConverter" />
		<converter:ByteToImageConverter x:Key="NullOrEmptyImageConverter" />
		<converter:DynamicPriceConverter x:Key="DynamicPriceConverter" />
	</Page.Resources>

	<Page.DataContext>
		<viewmodels:CombinedProductViewModel />
	</Page.DataContext>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="95" />
			<RowDefinition Height="*" />
			<RowDefinition Height="20" />
		</Grid.RowDefinitions>

		<!--#region Title of the page-->
		<StackPanel
			Grid.Row="0"
			Margin="10,0,10,0"
			Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"
			>
			<TextBlock Style="{DynamicResource DefaultTitle}" Text="{StaticResource Edit.Product.Title}" />
			<Canvas>
				<Path Style="{DynamicResource DefaultTitleLine}" />
			</Canvas>
			<TextBlock Style="{DynamicResource DefaultSubTitle}" Text="{StaticResource Edit.Product.Subtitle}" />
		</StackPanel>
		<!--#endregion-->

		<!--#region Page Content-->
		<Grid Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="1.5*" />
			</Grid.ColumnDefinitions>

			<!--#region DataGrid-->
			<Grid Grid.Column="0">
				<Grid.RowDefinitions>
					<RowDefinition Height="33" />
					<RowDefinition Height="*" />
					<RowDefinition Height="20" />
				</Grid.RowDefinitions>

				<!--#region DataGrid-->
				<Grid Grid.Row="1">
					<Grid.RowDefinitions>
						<RowDefinition Height="38" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<!--#region Products ActionBar-->
					<ToolBarTray
						Grid.Row="0"
						Margin="10,7,0,0"
						Style="{DynamicResource DefaultToolBarTray}"
						>
						<ToolBar x:Name="generalToolbar" Style="{DynamicResource DefaultToolBar}">
							<Button Click="ButtonNew" ToolTip="{StaticResource Edit.Product.Action.Tooltip.Add}">
								<Image Style="{DynamicResource ToolBarAddIcon}" />
							</Button>
							<Button Click="ButtonDelete" ToolTip="{StaticResource Edit.Product.Action.Tooltip.Delete}">
								<Image Style="{DynamicResource ToolBarDeleteIcon}" />
							</Button>
							<Button Click="ButtonSave" ToolTip="{StaticResource Edit.Product.Action.Tooltip.Save}">
								<Image Style="{DynamicResource ToolBarSaveIcon}" />
							</Button>
						</ToolBar>
					</ToolBarTray>

					<!--#endregion-->

					<!--#region Products DataGrid-->
					<syncfusion:SfDataGrid
						x:Name="dataGrid"
						Grid.Row="1"
						Margin="10,5"
						d:ItemsSource="{d:SampleData}"
						AllowDeleting="False"
						AllowEditing="False"
						AllowFiltering="True"
						AllowGrouping="True"
						AllowResizingColumns="True"
						AutoGenerateColumns="False"
						ColumnSizer="Star"
						FilterRowPosition="Top"
						ItemsSource="{Binding ProductViewModel.Product, Mode=TwoWay}"
						Loaded="ProductDataGridLoaded"
						SelectedIndex="0"
						SelectedItem="{Binding ProductViewModel.SelectedProduct, Mode=TwoWay}"
						SelectionChanged="ChangedProduct"
						SortClickAction="DoubleClick"
						>
						<syncfusion:SfDataGrid.Columns>
							<syncfusion:GridTextColumn
								HeaderText="{StaticResource Edit.Product.DataGrid.Header.Id}"
								HorizontalHeaderContentAlignment="Left"
								IsHidden="True"
								MappingName="ProductId"
								/>
							<syncfusion:GridTextColumn
								Width="150"
								AllowFiltering="True"
								AllowSorting="True"
								HeaderText="{StaticResource Edit.Product.DataGrid.Header.Code}"
								HorizontalHeaderContentAlignment="Left"
								MappingName="ProductCode"
								/>
							<syncfusion:GridTextColumn
								AllowFiltering="True"
								AllowSorting="True"
								HeaderText="{StaticResource Edit.Product.DataGrid.Header.Name}"
								HorizontalHeaderContentAlignment="Left"
								MappingName="ProductName"
								/>
						</syncfusion:SfDataGrid.Columns>
					</syncfusion:SfDataGrid>
					<!--#endregion-->
				</Grid>
				<!--#endregion-->
			</Grid>
			<!--#endregion-->

			<!--#region DataFields-->
			<Grid Grid.Column="1">
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="0" />
				</Grid.RowDefinitions>

				<!--#region Data fields-->
				<TabControl
					x:Name="TabControl"
					Grid.Row="0"
					Style="{DynamicResource Default TabControl}"
					>

					<!--#region Product information tab-->
					<TabItem Header="{StaticResource Edit.Product.Tab.General.Label}" Style="{DynamicResource Default TabItem}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="190" />
								<RowDefinition Height="140" />
								<RowDefinition Height="90" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="2.5*" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<!--#region Image section-->
							<StackPanel
								Grid.RowSpan="3"
								Grid.Column="1"
								Margin="5"
								HorizontalAlignment="Center"
								>
								<Border
									Width="234"
									Height="234"
									Margin="2"
									Style="{DynamicResource ImageBorder}"
									>
									<Image
										x:Name="ProductImage"
										Margin="0,0,0,117"
										HorizontalAlignment="Center"
										VerticalAlignment="Bottom"
										Source="{Binding ProductViewModel.SelectedProduct.ProductImage, Converter={StaticResource ByteToImageConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										/>
								</Border>

								<ToolBarTray HorizontalAlignment="Center" Style="{DynamicResource ImageToolBarTray}">
									<ToolBar Style="{DynamicResource ImageToolBar}">
										<Button
											VerticalAlignment="Top"
											Click="ImageAdd"
											ToolTip="{StaticResource ToolBar.Button.Image.Add.Label}"
											>
											<Image Style="{DynamicResource ToolBarAddIcon}" />
										</Button>
										<Button
											VerticalAlignment="Bottom"
											Click="ImageDelete"
											DataContext="{Binding ProductViewModel}"
											Style="{DynamicResource HideButtonOnNoImage}"
											ToolTip="{StaticResource ToolBar.Button.Image.Remove.Label}"
											>
											<Image
												Margin="0,6,0,-6"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Style="{DynamicResource ToolBarDeleteIcon}"
												/>
										</Button>
										<Separator
											Margin="5,0,10,0"
											DataContext="{Binding ProductViewModel}"
											Style="{DynamicResource HideSeperatorOnNoImage}"
											/>
										<Button
											VerticalAlignment="Top"
											Click="ImageRotate"
											DataContext="{Binding ProductViewModel}"
											Style="{DynamicResource HideButtonOnNoImage}"
											ToolTip="{StaticResource ToolBar.Button.Image.Rotate.Label}"
											>
											<Image Style="{DynamicResource ToolBarRotateIcon}" />
										</Button>
									</ToolBar>
								</ToolBarTray>
								<TextBox
									x:Name="ProductImageRotationAngle"
									Text="{Binding ProductViewModel.SelectedProduct.ProductImageRotationAngle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									Visibility="Collapsed"
									/>
							</StackPanel>
							<!--#endregion-->

							<!--#region Left panels-->
							<!--#region Product information-->
							<GroupBox
								Grid.Row="0"
								Margin="2,2"
								Opacity="1"
								>
								<GroupBox.Header>
									<StackPanel Background="Transparent" Orientation="Horizontal">
										<Image Source="{DynamicResource product}" Style="{DynamicResource ImageHeaderGroup}" />
										<TextBlock Style="{DynamicResource Group.Hearder.TextBlock}" Text="{DynamicResource Edit.Product.Tab.General.Group.General.Text}" />
									</StackPanel>
								</GroupBox.Header>

								<Grid Margin="5,2">
									<Grid.RowDefinitions>
										<RowDefinition Height="25" />
										<RowDefinition Height="*" />
										<RowDefinition Height="25" />
										<RowDefinition Height="*" />
										<RowDefinition Height="25" />
										<RowDefinition Height="*" />
										<RowDefinition Height="5" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="200" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<!--#region ComboBox simulation for the Category-->
									<Popup
										x:Name="CategoryPopup"
										AllowsTransparency="True"
										IsOpen="{Binding CategoryViewModel.IsCategoryPopupOpen, Mode=TwoWay}"
										Placement="Bottom"
										StaysOpen="False"
										>
										<Border
											Background="White"
											BorderBrush="Gray"
											BorderThickness="1"
											>
											<syncfusion:SfTreeView
												x:Name="CategoryTreeView"
												Grid.Row="5"
												Width="600"
												Margin="10,0,0,0"
												HorizontalAlignment="Left"
												VerticalAlignment="Center"
												BorderBrush="DarkBlue"
												BorderThickness="2"
												ChildPropertyName="SubCategories"
												IsAnimationEnabled="false"
												ItemsSource="{Binding CategoryViewModel.Category}"
												LineStroke="DarkBlue"
												LineStrokeThickness=".75"
												Loaded="CategoryTreeViewLoaded"
												SelectedItem="{Binding CategoryViewModel.SelectedCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												ShowLines="True"
												ShowRootLines="True"
												>
												<syncfusion:SfTreeView.ItemTemplate>
													<HierarchicalDataTemplate ItemsSource="{Binding CategoryViewModel.SubCategories}">
														<TextBlock Text="{Binding CategoryName}" />
													</HierarchicalDataTemplate>
												</syncfusion:SfTreeView.ItemTemplate>
											</syncfusion:SfTreeView>
										</Border>
									</Popup>
									<!--#endregion-->

									<!--#region Input lines-->
									<TextBlock
										Grid.Row="0"
										Grid.Column="0"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.General.Code.Label}"
										/>

									<TextBlock
										Grid.Row="0"
										Grid.Column="1"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.General.Brand.Label}"
										/>

									<TextBox
										x:Name="ProductCode"
										Grid.Row="1"
										Grid.Column="0"
										Width="150"
										HorizontalAlignment="Left"
										CharacterCasing="Upper"
										MaxLength="30"
										Style="{DynamicResource DefaultTextBox}"
										Tag="{DynamicResource Edit.Product.Tab.General.Group.General.Code.Tag}"
										Text="{Binding ProductViewModel.SelectedProduct.ProductCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										ToolTip="{DynamicResource Edit.Product.Tab.General.Group.General.Code.Tooltip}"
										/>

									<syncfusion:ComboBoxAdv
										x:Name="ProductBrand"
										Grid.Row="1"
										Grid.Column="1"
										Width="250"
										HorizontalAlignment="Left"
										Cursor="Arrow"
										DefaultText="{DynamicResource Edit.Product.Tab.General.Group.General.Brand.Tag}"
										DisplayMemberPath="BrandName"
										ItemsSource="{Binding BrandViewModel.Brand}"
										SelectedItem="{Binding BrandViewModel.SelectedBrand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										TextSearch.TextPath="BrandName"
										ToolTip="{DynamicResource Edit.Product.Tab.General.Group.General.Brand.Tooltip}"
										/>

									<TextBlock
										Grid.Row="2"
										Grid.Column="0"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.General.Name.Label}"
										/>

									<TextBox
										x:Name="ProductName"
										Grid.Row="3"
										Grid.Column="0"
										Grid.ColumnSpan="2"
										Width="600"
										HorizontalAlignment="Left"
										Style="{DynamicResource DefaultTextBox}"
										Tag="{DynamicResource Edit.Product.Tab.General.Group.General.Name.Tag}"
										Text="{Binding ProductViewModel.SelectedProduct.ProductName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										ToolTip="{DynamicResource Edit.Product.Tab.General.Group.General.Name.Tooltip}"
										/>

									<TextBlock
										Grid.Row="4"
										Grid.ColumnSpan="2"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.General.Category.Label}"
										/>

									<Button
										x:Name="ProductCategory"
										Grid.Row="5"
										Grid.ColumnSpan="2"
										Width="600"
										Click="CategoryChange"
										Content="{Binding CategoryViewModel.SelectedCategory.FullPath, Mode=OneWay}"
										Style="{StaticResource ComboBoxButtonStyle}"
										/>
									<!--#endregion-->
								</Grid>
							</GroupBox>
							<!--#endregion-->

							<!--#region  Inventory information-->
							<GroupBox
								Grid.Row="1"
								Margin="2,2"
								Opacity="1"
								>
								<GroupBox.Header>
									<StackPanel Background="Transparent" Orientation="Horizontal">
										<Image Source="{DynamicResource inventory}" Style="{DynamicResource ImageHeaderGroup}" />
										<TextBlock Style="{DynamicResource Group.Hearder.TextBlock}" Text="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Text}" />
									</StackPanel>
								</GroupBox.Header>

								<Grid Margin="5,2">
									<Grid.RowDefinitions>
										<RowDefinition Height="25" />
										<RowDefinition Height="*" />
										<RowDefinition Height="25" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="160" />
										<ColumnDefinition Width="160" />
										<ColumnDefinition Width="160" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<!--#region ComboBox simulation for the Storage Location-->
									<Popup
										x:Name="StoragePopup"
										AllowsTransparency="True"
										IsOpen="{Binding StorageViewModel.IsStoragePopupOpen, Mode=TwoWay}"
										Placement="Bottom"
										StaysOpen="False"
										>
										<Border
											Background="White"
											BorderBrush="Gray"
											BorderThickness="1"
											>
											<syncfusion:SfTreeView
												x:Name="StorageTreeView"
												Grid.Row="3"
												Width="600"
												Margin="10,0,0,0"
												HorizontalAlignment="Left"
												VerticalAlignment="Center"
												BorderBrush="DarkBlue"
												BorderThickness="2"
												ChildPropertyName="SubStorage"
												IsAnimationEnabled="false"
												ItemsSource="{Binding StorageViewModel.Storage}"
												LineStroke="DarkBlue"
												LineStrokeThickness=".75"
												Loaded="StorageTreeViewLoaded"
												SelectedItem="{Binding StorageViewModel.SelectedStorage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												ShowLines="True"
												ShowRootLines="True"
												>
												<syncfusion:SfTreeView.ItemTemplate>
													<HierarchicalDataTemplate ItemsSource="{Binding StorageViewModel.SubStorage}">
														<TextBlock Text="{Binding StorageName}" />
													</HierarchicalDataTemplate>
												</syncfusion:SfTreeView.ItemTemplate>
											</syncfusion:SfTreeView>
										</Border>
									</Popup>

									<!--#region Input lines-->
									<TextBlock
										Grid.Row="0"
										Grid.Column="0"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.Inventory.MinStock.Label}"
										/>

									<TextBlock
										Grid.Row="0"
										Grid.Column="1"
										Style="{DynamicResource Tab.Panel.Label}"
										Tag="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Quantity.Tag}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Quantity.Label}"
										ToolTip="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Quantity.Tooltip}"
										/>

									<TextBlock
										Grid.Row="0"
										Grid.Column="2"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Dimensions.Label}"
										/>

									<TextBlock
										Grid.Row="0"
										Grid.Column="3"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.Inventory.PackingUnit.Label}"
										/>


									<TextBox
										x:Name="ProductMinStock"
										Grid.Row="1"
										Grid.Column="0"
										Width="150"
										HorizontalAlignment="Left"
										HorizontalContentAlignment="Left"
										Style="{DynamicResource DefaultTextBox}"
										Tag="{DynamicResource Edit.Product.Tab.General.Group.Inventory.MinStock.Tag}"
										Text="{Binding ProductViewModel.SelectedProduct.ProductMinimalStock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										ToolTip="{DynamicResource Edit.Product.Tab.General.Group.Inventory.MinStock.Tooltip}"
										/>

									<TextBox
										x:Name="ProductOrderQuantity"
										Grid.Row="1"
										Grid.Column="1"
										Width="150"
										HorizontalAlignment="Left"
										HorizontalContentAlignment="Left"
										Style="{DynamicResource DefaultTextBox}"
										Tag="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Quantity.Tag}"
										Text="{Binding ProductViewModel.SelectedProduct.ProductStandardQuantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										ToolTip="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Quantity.Tooltip}"
										/>


									<TextBox
										x:Name="ProductDimensions"
										Grid.Row="1"
										Grid.Column="2"
										Width="150"
										HorizontalAlignment="Left"
										HorizontalContentAlignment="Left"
										Style="{DynamicResource DefaultTextBox}"
										Tag="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Dimensions.Tag}"
										Text="{Binding ProductViewModel.SelectedProduct.ProductDimensions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										ToolTip="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Dimensions.Tooltip}"
										/>

									<syncfusion:ComboBoxAdv
										x:Name="ProductPackagingUnit"
										Grid.Row="1"
										Grid.Column="3"
										Width="120"
										HorizontalAlignment="Left"
										HorizontalContentAlignment="Left"
										Cursor="Arrow"
										DefaultText="{DynamicResource Edit.Product.Tab.General.Group.Inventory.PackingUnit.Tag}"
										DisplayMemberPath="UnitName"
										ItemsSource="{Binding UnitViewModel.Unit}"
										SelectedItem="{Binding UnitViewModel.SelectedUnit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										TextSearch.TextPath="UnitName"
										ToolTip="{DynamicResource Edit.Product.Tab.General.Group.Inventory.PackingUnit.Tooltip}"
										/>

									<TextBlock
										Grid.Row="2"
										Grid.Column="0"
										Grid.ColumnSpan="4"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Location.Label}"
										/>
									<Button
										x:Name="ProductStorageLocation"
										Grid.Row="3"
										Grid.Column="0"
										Grid.ColumnSpan="4"
										Width="600"
										Click="StorageChange"
										Content="{Binding StorageViewModel.SelectedStorage.FullPath, Mode=OneWay}"
										Style="{StaticResource ComboBoxButtonStyle}"
										ToolTip="{DynamicResource Edit.Product.Tab.General.Group.Inventory.Location.Tooltip}"
										/>
									<!--#endregion-->



									<!--#endregion-->
								</Grid>
							</GroupBox>
							<!--#endregion-->

							<!--#region Project information-->
							<GroupBox
								Grid.Row="2"
								Margin="2,2"
								Opacity="1"
								>
								<GroupBox.Header>
									<StackPanel Background="Transparent" Orientation="Horizontal">
										<Image Source="{DynamicResource project}" Style="{DynamicResource ImageHeaderGroup}" />
										<TextBlock Style="{DynamicResource Group.Hearder.TextBlock}" Text="{DynamicResource Edit.Product.Tab.General.Group.Project.Text}" />
									</StackPanel>
								</GroupBox.Header>

								<Grid Margin="5,2">
									<Grid.RowDefinitions>
										<RowDefinition Height="25" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="160" />
										<ColumnDefinition Width="180" />
										<ColumnDefinition Width="100" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<!--#region Input lines-->
									<TextBlock
										Grid.Row="0"
										Grid.Column="0"
										Margin="0,0,17,0"
										HorizontalAlignment="Right"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.Project.Price.Label}"
										/>

									<TextBlock
										x:Name="PackagePriceLabel"
										Grid.Row="0"
										Grid.Column="1"
										Margin="0,0,18,0"
										HorizontalAlignment="Right"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{Binding ProductViewModel.PackagePriceLabelText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
										Visibility="{Binding ProductViewModel.ProcuctPacketPriceBlockVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
										/>

									<TextBlock
										Grid.Row="0"
										Grid.Column="2"
										HorizontalAlignment="Center"
										Style="{DynamicResource Tab.Panel.Label}"
										Text="{DynamicResource Edit.Product.Tab.General.Group.Project.ProjectCosts.Label}"
										/>

									<StackPanel
										Grid.Row="1"
										Grid.Column="0"
										Orientation="Horizontal"
										>
										<TextBlock
											Margin="0,0,3,0"
											VerticalAlignment="Center"
											Text="€"
											/>
										<TextBox
											x:Name="ProductPrice"
											Width="135"
											HorizontalAlignment="Left"
											HorizontalContentAlignment="Right"
											Language="nl-NL"
											Style="{DynamicResource DefaultTextBox}"
											Tag="{DynamicResource Edit.Product.Tab.General.Group.Project.Price.Tag}"
											Text="{Binding ProductViewModel.SelectedProduct.ProductPrice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DynamicPriceConverter}}"
											ToolTip="{DynamicResource Edit.Product.Tab.General.Group.Project.Price.Tooltip}"
											/>
									</StackPanel>

									<TextBlock
										x:Name="PricePerSufix"
										Grid.Row="1"
										Grid.Column="1"
										HorizontalAlignment="Left"
										VerticalAlignment="Center"
										Text="{Binding ProductViewModel.PricePerSufixText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
										Visibility="{Binding ProductViewModel.PricePerSufixVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
										/>

									<StackPanel
										x:Name="ProcuctPacketPriceBlock"
										Grid.Row="1"
										Grid.Column="1"
										Orientation="Horizontal"
										Visibility="{Binding ProductViewModel.ProcuctPacketPriceBlockVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
										>
										<TextBlock
											Margin="0,0,3,0"
											VerticalAlignment="Center"
											Text="€"
											/>
										<TextBox
											x:Name="ProductPackagePrice"
											Width="150"
											HorizontalAlignment="Left"
											HorizontalContentAlignment="Right"
											Language="nl-NL"
											Style="{DynamicResource DefaultTextBox}"
											Tag="{DynamicResource Edit.Product.Tab.General.Group.Project.PackagePrice.Tag}"
											Text="{Binding ProductViewModel.SelectedProduct.ProductPackagePrice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}"
											ToolTip="{DynamicResource Edit.Product.Tab.General.Group.Project.PackagePrice.Tooltip}"
											/>
									</StackPanel>

									<CheckBox
										x:Name="ProductProjectCosts"
										Grid.Row="1"
										Grid.Column="2"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										IsChecked="{Binding ProductViewModel.SelectedProduct.ProductProjectCosts, Converter={StaticResource IntToBoolConverter}}"
										/>
									<!--#endregion-->
								</Grid>
							</GroupBox>
							<!--#endregion-->

							<TextBox
								Grid.Row="3"
								Style="{DynamicResource NotSafedWarning}"
								Text="{StaticResource Edit.Product.Tab.NewProduct.Warning}"
								Visibility="{Binding ProductViewModel.IsAddingNew, Converter={StaticResource BooleanToVisibilityConverter}}"
								/>
							<!--#endregion-->
						</Grid>
					</TabItem>
					<!--#endregion-->

					<!--#region Product memo-->
					<TabItem
						Width="176"
						HorizontalAlignment="Left"
						Header="{StaticResource Edit.Product.Tab.Memo.Label}"
						Style="{DynamicResource Default TabItem}"
						>
						<Grid Margin="5">
							<Grid.RowDefinitions>
								<RowDefinition Height="40" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<!--#region Rtf Toolbar-->
							<StackPanel Grid.Row="0" Orientation="Horizontal">
								<ToolBarTray Style="{DynamicResource RtfToolBarTray}">
									<ToolBar Style="{DynamicResource RtfToolBar}">
										<Button Command="ApplicationCommands.Cut" ToolTip="{StaticResource rtfToolbar.Action.Cut}">
											<Image Style="{DynamicResource RtfToolBarCutIcon}" />
										</Button>
										<Button Command="ApplicationCommands.Copy" ToolTip="{StaticResource rtfToolbar.Action.Copy}">
											<Image Style="{DynamicResource RtfToolBarCopyIcon}" />
										</Button>
										<Button Command="ApplicationCommands.Paste" ToolTip="{StaticResource rtfToolbar.Action.Paste}">
											<Image Style="{DynamicResource RtfToolBarPasteIcon}" />
										</Button>
										<Button Command="ApplicationCommands.Undo" ToolTip="{StaticResource rtfToolbar.Action.Undo}">
											<Image Style="{DynamicResource RtfToolBarUndoIcon}" />
										</Button>
										<Button Command="ApplicationCommands.Redo" ToolTip="{StaticResource rtfToolbar.Action.Redo}">
											<Image Style="{DynamicResource RtfToolBarRedoIcon}" />
										</Button>

										<Separator Margin="6,0" />

										<Button
											x:Name="ToolStripButtonBold"
											Command="EditingCommands.ToggleBold"
											ToolTip="{StaticResource rtfToolbar.Action.Bold}"
											>
											<Image Style="{DynamicResource RtfToolBarBoldIcon}" />
										</Button>
										<Button
											x:Name="ToolStripButtonItalic"
											Command="EditingCommands.ToggleItalic"
											ToolTip="{StaticResource rtfToolbar.Action.Italic}"
											>
											<Image Style="{DynamicResource RtfToolBarItalicIcon}" />
										</Button>
										<Button
											x:Name="ToolStripButtonUnderline"
											Command="EditingCommands.ToggleUnderline"
											ToolTip="{StaticResource rtfToolbar.Action.Underline}"
											>
											<Image Style="{DynamicResource RtfToolBarUnderlineIcon}" />
										</Button>

										<Separator Margin="6,0" />

										<Button Command="EditingCommands.ToggleBullets" ToolTip="{StaticResource rtfToolbar.Action.ListBullet}">
											<Image Style="{DynamicResource RtfToolBarBulletListIcon}" />
										</Button>
										<Button Command="EditingCommands.ToggleNumbering" ToolTip="{StaticResource rtfToolbar.Action.ListNumber}">
											<Image Style="{DynamicResource RtfToolBarNumbersListIcon}" />
										</Button>

										<Separator Margin="6,0" />

										<Button Command="EditingCommands.IncreaseIndentation" ToolTip="{StaticResource rtfToolbar.Action.Indent}">
											<Image Style="{DynamicResource RtfToolBarIndentIcon}" />
										</Button>
										<Button Command="EditingCommands.DecreaseIndentation" ToolTip="{StaticResource rtfToolbar.Action.Outdent}">
											<Image Style="{DynamicResource RtfToolBarIndentRemoveIcon}" />
										</Button>
									</ToolBar>
								</ToolBarTray>
							</StackPanel>
							<!--#endregion-->

							<!--#region Memo field-->
							<RichTextBox
								x:Name="ProductMemo"
								Grid.Row="1"
								Width="Auto"
								MinHeight="200"
								Margin="5"
								HorizontalAlignment="Center"
								VerticalAlignment="Top"
								HorizontalScrollBarVisibility="Auto"
								VerticalScrollBarVisibility="Auto"
								>
								<FlowDocument Name="ProductMemoFD">
									<Paragraph>
										<Run Text="" />
									</Paragraph>
								</FlowDocument>
							</RichTextBox>
							<!--#endregion-->
						</Grid>

					</TabItem>

					<!--#endregion-->

					<!--#region Product suppliers tab-->
					<TabItem
						x:Name="SupplierTab"
						Width="107"
						HorizontalAlignment="Right"
						Header="{StaticResource Edit.Product.Tab.Supplier.Label}"
						Style="{DynamicResource Default TabItem}"
						>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="430" />
							</Grid.ColumnDefinitions>

							<!--#region Suppliers per product datagrid section-->
							<!--#region Datagrid definition-->
							<Grid Grid.Column="0" Margin="5,2,5,0">
								<Grid.RowDefinitions>
									<RowDefinition Height="38" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<!--#region Toolbar for datagrid-->
								<StackPanel
									Grid.Row="0"
									Margin="5"
									Orientation="Horizontal"
									>
									<ToolBarTray Style="{DynamicResource DefaultToolBarTray}">
										<ToolBar
											x:Name="supplierToolbar"
											VerticalContentAlignment="Center"
											Style="{DynamicResource DefaultToolBar}"
											>
											<Button
												x:Name="btnNewProductSupplier"
												Click="supplierToolbarButtonNew"
												ToolTip="{StaticResource Edit.Product.Tab.Supplier.Action.Tooltip.Add}"
												>
												<Image IsEnabled="False" Style="{DynamicResource ToolBarAddIcon}" />
											</Button>
											<Button
												x:Name="btnSaveProductSupplier"
												Click="SupplierToolbarButtonSave"
												ToolTip="{StaticResource Edit.Product.Tab.Supplier.Action.Tooltip.Save}"
												Visibility="{Binding ProductSupplierViewModel.HasSuppliers, Converter={StaticResource BooleanToVisibilityConverter}}"
												>
												<Image IsEnabled="False" Style="{DynamicResource ToolBarSaveIcon}" />
											</Button>
											<Button
												x:Name="btnDeleteProductSupplier"
												Margin="0,6,0,-6"
												VerticalContentAlignment="Center"
												Click="SupplierToolbarButtonDelete"
												ToolTip="{StaticResource Edit.Product.Tab.Supplier.Action.Tooltip.Delete}"
												Visibility="{Binding ProductSupplierViewModel.HasSuppliers, Converter={StaticResource BooleanToVisibilityConverter}}"
												>
												<Image IsEnabled="False" Style="{DynamicResource ToolBarDeleteIcon}" />
											</Button>
										</ToolBar>
									</ToolBarTray>

									<TextBox
										x:Name="SafeWarning"
										Margin="10,6,0,6"
										VerticalAlignment="Center"
										HorizontalContentAlignment="Center"
										VerticalContentAlignment="Center"
										Style="{DynamicResource NotSafedWarning}"
										Text="{StaticResource Edit.Product.ProductSupplier.UnSavedChanges}"
										Visibility="{Binding ProductSupplierViewModel.HasUnsavedChanges, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
										/>
								</StackPanel>
								<!--#endregion-->

								<DataGrid
									x:Name="ProductSupplierDataGrid"
									Grid.Row="1"
									Margin="5,0"
									Padding="3"
									d:ItemsSource="{d:SampleData}"
									AutoGenerateColumns="False"
									IsReadOnly="True"
									IsSynchronizedWithCurrentItem="True"
									ItemsSource="{Binding ProductSupplierViewModel.FilteredSuppliers}"
									SelectedItem="{Binding ProductSupplierViewModel.SelectedSupplier, Mode=TwoWay}"
									VerticalScrollBarVisibility="Auto"
									>
									<DataGrid.Columns>
										<!--#region Record Id (Hidden)-->
										<DataGridTextColumn
											Width="70"
											Binding="{Binding ProductSupplierId}"
											Header="{StaticResource Edit.Product.Tab.Supplier.Id.Header}"
											Visibility="Hidden"
											/>
										<!--#endregion-->

										<!--#region Product Id (Hidden)-->
										<DataGridTextColumn
											Width="70"
											Binding="{Binding ProductSupplierProductId}"
											Header="{StaticResource Edit.Product.Tab.Supplier.ProductId.Header}"
											Visibility="Hidden"
											/>
										<!--#endregion-->

										<!--#region Supplier Id (Hidden)-->
										<DataGridTextColumn
											Width="70"
											Binding="{Binding ProductSupplierSupplierId}"
											Header="{StaticResource Edit.Product.Tab.Supplier.SupplierId.Header}"
											Visibility="Hidden"
											/>
										<!--#endregion-->

										<!--#region Currency Id (Hidden)-->
										<DataGridTextColumn
											Width="70"
											Binding="{Binding ProductSupplierCurrencyId}"
											Header="{StaticResource Edit.Product.Tab.Supplier.CurrencyId.Header}"
											Visibility="Hidden"
											/>
										<!--#endregion-->

										<!--#region Default supplier-->
										<DataGridTextColumn
											Width="AUTO"
											Binding="{Binding ProductSupplierDefaultSupplier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToStringConverter}}"
											Header="{StaticResource Edit.Product.Tab.Supplier.DefaultSupplier.Header}"
											>
											<DataGridTextColumn.ElementStyle>
												<Style TargetType="TextBlock">
													<Setter Property="HorizontalAlignment" Value="Center" />
													<Setter Property="VerticalAlignment" Value="Center" />
												</Style>
											</DataGridTextColumn.ElementStyle>
										</DataGridTextColumn>
										<!--#endregion-->

										<!--#region Product Supplier Name-->
										<DataGridTextColumn
											Width="*"
											Binding="{Binding ProductSupplierSupplierName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											Header="{StaticResource Edit.Product.Tab.Supplier.Supplier.Header}"
											/>
										<!--#endregion-->

										<!--#region Product Number-->
										<DataGridTextColumn
											Width="75"
											Binding="{Binding ProductSupplierProductNumber, Mode=TwoWay}"
											Header="{StaticResource Edit.Product.Tab.Supplier.ProductNumber.Header}"
											/>
										<!--#endregion-->

										<!--#region Price-->
										<DataGridTextColumn
											Width="80"
											Binding="{Binding ProductSupplierPrice, StringFormat={}{0:N2}, ConverterCulture='nl-NL', Mode=TwoWay}"
											Header="{StaticResource Edit.Product.Tab.Supplier.Price.Header}"
											>
											<DataGridTextColumn.ElementStyle>
												<Style TargetType="TextBlock">
													<Setter Property="HorizontalAlignment" Value="Right" />
												</Style>
											</DataGridTextColumn.ElementStyle>
										</DataGridTextColumn>
									</DataGrid.Columns>
									<!--#endregion-->
								</DataGrid>
							</Grid>
							<!--#endregion-->

							<!--#region Supplier information fields-->
							<StackPanel Grid.Column="1" Margin="5">
								<GroupBox x:Name="EditProductPerSupplier" IsEnabled="{Binding ProductSupplierViewModel.HasSuppliers}">
									<GroupBox.Header>
										<StackPanel Orientation="Horizontal">
											<Image Source="{StaticResource supplier}" Style="{DynamicResource ImageHeaderGroup}" />
											<TextBlock Style="{DynamicResource Group.Hearder.TextBlock}" Text="{StaticResource Edit.Product.Tab.Supplier.Group.General.Title.Header}" />
										</StackPanel>
									</GroupBox.Header>

									<Grid Margin="3,0">
										<Grid.RowDefinitions>
											<RowDefinition Height="27" />
											<RowDefinition Height="*" />
											<RowDefinition Height="27" />
											<RowDefinition Height="*" />
											<RowDefinition Height="27" />
											<RowDefinition Height="*" />
											<RowDefinition Height="27" />
											<RowDefinition Height="*" />
											<RowDefinition Height="27" />
											<RowDefinition Height="*" />
											<RowDefinition Height="27" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>

										<!--#region Supplier-->
										<TextBlock
											Grid.Row="0"
											Style="{DynamicResource Tab.Panel.Label}"
											Text="{StaticResource Edit.Product.Tab.Supplier.Group.General.Supplier.Label}"
											/>

										<syncfusion:ComboBoxAdv
											x:Name="SupplierComboBox"
											Grid.Row="1"
											Width="360"
											HorizontalAlignment="Left"
											AutoCompleteMode="Suggest"
											DefaultText="{StaticResource Edit.Product.Tab.Supplier.Group.General.Supplier.Tag}"
											DisplayMemberPath="SupplierName"
											ItemsSource="{Binding ProductSupplierViewModel.SupplierList}"
											SelectedValue="{Binding ProductSupplierViewModel.SelectedSupplier.ProductSupplierSupplierId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											SelectedValuePath="SupplierId"
											SelectionChanged="SupplierChanged"
											ToolTip="{StaticResource Edit.Product.Tab.Supplier.Group.General.Supplier.Tooltip}"
											>
											<syncfusion:ComboBoxAdv.ItemContainerStyleSelector>
												<StyleSelector />
											</syncfusion:ComboBoxAdv.ItemContainerStyleSelector>
										</syncfusion:ComboBoxAdv>
										<!--#endregion-->

										<!--#region Supplier part number-->
										<TextBlock
											Grid.Row="2"
											Style="{DynamicResource Tab.Panel.Label}"
											Text="{StaticResource Edit.Product.Tab.Supplier.Group.General.ProductNumberSupplier.Label}"
											/>
										<TextBox
											x:Name="SupplierProductNumber"
											Grid.Row="3"
											Width="360"
											IsEnabled="True"
											Style="{DynamicResource DefaultTextBox}"
											Tag="{StaticResource Edit.Product.Tab.Supplier.Group.General.ProductNumberSupplier.Tag}"
											Text="{Binding ProductSupplierViewModel.SelectedSupplier.ProductSupplierProductNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											TextChanged="FieldChanged"
											ToolTip="{StaticResource Edit.Product.Tab.Supplier.Group.General.ProductNumberSupplier.Tooltip}"
											/>
										<!--#endregion-->

										<!--#region Description-->
										<TextBlock
											Grid.Row="4"
											Style="{DynamicResource Tab.Panel.Label}"
											Text="{StaticResource Edit.Product.Tab.Supplier.Group.General.Description.Label}"
											/>

										<TextBox
											x:Name="SupplierProductName"
											Grid.Row="5"
											Width="360"
											IsEnabled="True"
											Style="{DynamicResource DefaultTextBox}"
											Tag="{StaticResource Edit.Product.Tab.Supplier.Group.General.Description.Tag}"
											Text="{Binding ProductSupplierViewModel.SelectedSupplier.ProductSupplierProductName}"
											TextChanged="FieldChanged"
											ToolTip="{StaticResource Edit.Product.Tab.Supplier.Group.General.Description.Tooltip}"
											/>
										<!--#endregion-->

										<!--#region Price-->
										<TextBlock
											Grid.Row="6"
											Style="{DynamicResource Tab.Panel.Label}"
											Text="{StaticResource Edit.Product.Tab.Supplier.Group.General.Price.Label}"
											/>

										<StackPanel Grid.Row="7" Orientation="Horizontal">

											<!--  Currency Symbol  -->
											<TextBox
												x:Name="ProductSupplierCurrencySymbol"
												Width="25"
												HorizontalAlignment="Left"
												HorizontalContentAlignment="Left"
												VerticalContentAlignment="Center"
												Background="#FFE5E5E5"
												BorderBrush="{x:Null}"
												IsReadOnly="True"
												IsTabStop="False"
												Style="{DynamicResource DefaultTextBox}"
												Text="{Binding ProductSupplierViewModel.SelectedSupplier.ProductSupplierCurrencySymbol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												TextWrapping="Wrap"
												/>

											<!--  Price  -->
											<TextBox
												x:Name="SupplierProductPrice"
												Width="70"
												HorizontalContentAlignment="Right"
												VerticalContentAlignment="Center"
												IsEnabled="True"
												Style="{DynamicResource DefaultTextBox}"
												Tag="{StaticResource Edit.Product.Tab.Supplier.Group.General.Price.Tag}"
												Text="{Binding ProductSupplierViewModel.SelectedSupplier.ProductSupplierPrice, StringFormat={}{0:N2}, ConverterCulture='nl-NL', UpdateSourceTrigger=PropertyChanged}"
												TextChanged="FieldChanged"
												ToolTip="{StaticResource Edit.Product.Tab.Supplier.Group.General.Price.Tooltip}"
												/>
										</StackPanel>
										<!--#endregion-->

										<!--#region Website-->
										<TextBlock
											Grid.Row="8"
											Style="{DynamicResource Tab.Panel.Label}"
											Text="{StaticResource Edit.Product.Tab.Supplier.Group.General.Url.Label}"
											/>

										<StackPanel
											Grid.Row="9"
											Grid.ColumnSpan="2"
											VerticalAlignment="Center"
											Orientation="Horizontal"
											>
											<!--  URL  -->
											<TextBox
												x:Name="SupplierProductUrl"
												Grid.Row="9"
												Width="360"
												IsEnabled="True"
												Style="{DynamicResource DefaultTextBox}"
												Tag="{StaticResource Edit.Product.Tab.Supplier.Group.General.Url.Tag}"
												Text="{Binding ProductSupplierViewModel.SelectedSupplier.ProductSupplierURL, UpdateSourceTrigger=PropertyChanged}"
												TextChanged="FieldChanged"
												ToolTip="{StaticResource Edit.Product.Tab.Supplier.Group.General.Url.Tooltip}"
												/>

											<!--  Spacer  -->
											<TextBlock Width="4" />

											<!--  Browse button  -->
											<Button
												x:Name="GotoWeb"
												Width="AUTO"
												HorizontalContentAlignment="Center"
												Click="ButtonWeb"
												ToolTip="{StaticResource Edit.Product.Tab.Supplier.Group.General.UrlButton.Tooltip}"
												Visibility="{Binding Text, ElementName=SupplierProductUrl, Converter={StaticResource StringToVisibilityConverter}}"
												>
												<Image
													Width="21"
													HorizontalAlignment="Center"
													IsEnabled="False"
													Style="{DynamicResource GotoWebIcon}"
													/>
											</Button>
										</StackPanel>
										<!--#endregion-->

										<!--#region Default supplier-->
										<TextBlock
											Grid.Row="10"
											Style="{DynamicResource Tab.Panel.Label}"
											Text="{StaticResource Edit.Product.Tab.Supplier.Group.General.DefaultSupplier.Label}"
											/>

										<CheckBox
											x:Name="SupplierDefault"
											Grid.Row="11"
											Checked="FieldChanged"
											IsChecked="{Binding ProductSupplierViewModel.SelectedSupplier.ProductSupplierDefaultSupplier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											ToolTip="{StaticResource Edit.Product.Tab.Supplier.Group.General.DefaultSupplier.Tooltip}"
											Unchecked="FieldChanged"
											/>
										<!--#endregion-->
									</Grid>
								</GroupBox>
							</StackPanel>
							<!--#endregion-->
							<!--#endregion-->
						</Grid>
					</TabItem>

					<!--#endregion-->

					<!--#region Inventory information tab-->
					<TabItem
						x:Name="InventoryTab"
						Header="{StaticResource Edit.Product.Tab.Inventory.Label}"
						Style="{DynamicResource Default TabItem}"
						/>
					<!--#endregion-->
				</TabControl>
				<!--#endregion-->

				<!--#region Hidden fields-->
				<StackPanel
					Grid.Row="1"
					Orientation="Horizontal"
					Visibility="Collapsed"
					>
					<Label Content="Id:" />
					<TextBox x:Name="ProductId" Text="{Binding ProductViewModel.SelectedProduct.ProductId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<TextBox x:Name="ProductBrandId" Text="{Binding ProductViewModel.SelectedProduct.ProductBrandId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<TextBox x:Name="ProductCategoryId" Text="{Binding ProductViewModel.SelectedProduct.ProductCategoryId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<TextBox x:Name="ProductStorageId" Text="{Binding ProductViewModel.SelectedProduct.ProductStorageId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<TextBox x:Name="ProductUnitId" Text="{Binding ProductViewModel.SelectedProduct.ProductUnitId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				</StackPanel>
				<!--#endregion-->
			</Grid>
			<!--#endregion-->
		</Grid>
		<!--#endregion-->

		<!--#region Statusbar-->
		<DockPanel
			Grid.Row="2"
			Height="30"
			Margin="10,0,10,0"
			VerticalAlignment="Center"
			Background="LightGray"
			>
			<Grid>
				<StackPanel Orientation="Horizontal">
					<TextBlock Style="{DynamicResource Status.Label}" Text="{StaticResource Import.Statusline.Text}" />
					<TextBlock
						x:Name="dispStatusLine"
						Style="{DynamicResource Status.Description}"
						Text="{DynamicResource Import.Statusline.Description}"
						/>
				</StackPanel>
			</Grid>
		</DockPanel>
		<!--#endregion-->
	</Grid>
</Page>
